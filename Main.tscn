[gd_scene load_steps=13 format=3 uid="uid://c2ef4nyv2ebsy"]

[ext_resource type="Script" path="res://Main.gd" id="1_r2ot1"]
[ext_resource type="PackedScene" uid="uid://8mgnsraqnj2d" path="res://gui/SettingRow.tscn" id="2_i218e"]
[ext_resource type="Script" path="res://scene/WindowScript.gd" id="3_h5uyj"]
[ext_resource type="PackedScene" uid="uid://b0ujxspc3tcrn" path="res://scene/environments/Environment2D.tscn" id="4_inthc"]
[ext_resource type="Texture2D" uid="uid://0d5kej8v1qg0" path="res://scene/assets/texture_1x.svg" id="5_1th6v"]
[ext_resource type="PackedScene" uid="uid://c8dco853ln1y8" path="res://scene/environments/Environment3D.tscn" id="5_4t02t"]
[ext_resource type="Texture2D" uid="uid://bmvp8krq6ukce" path="res://scene/assets/spinbox_updown_1x.svg" id="7_bibj3"]
[ext_resource type="Texture2D" uid="uid://dibwdbxo128u2" path="res://scene/assets/checkbutton_checked_1x.svg" id="7_mfyq3"]
[ext_resource type="Texture2D" uid="uid://cuoy5ve1kmett" path="res://scene/assets/ninepatch_texture_1x.svg" id="7_rpeur"]
[ext_resource type="Texture2D" uid="uid://dhwddcg3mexvu" path="res://scene/assets/checkbutton_unchecked_1x.svg" id="8_5kf4n"]

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_4csrp"]
bg_color = Color(1, 0.247059, 0.65098, 1)
border_width_left = 8
border_width_top = 8
border_width_right = 8
border_width_bottom = 8
border_color = Color(1, 1, 1, 1)
corner_radius_top_left = 12
corner_radius_top_right = 4
corner_radius_bottom_left = 36

[sub_resource type="StyleBoxTexture" id="StyleBoxTexture_mqwt0"]
texture = ExtResource("7_rpeur")
texture_margin_left = 46.0
texture_margin_top = 50.0
texture_margin_right = 46.0
texture_margin_bottom = 50.0

[node name="Main" type="MarginContainer"]
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
theme_override_constants/margin_left = 16
theme_override_constants/margin_top = 8
theme_override_constants/margin_right = 16
theme_override_constants/margin_bottom = 8
script = ExtResource("1_r2ot1")

[node name="ScrollContainer" type="ScrollContainer" parent="."]
layout_mode = 2
horizontal_scroll_mode = 0

[node name="MarginContainer" type="MarginContainer" parent="ScrollContainer"]
layout_mode = 2
size_flags_horizontal = 3
theme_override_constants/margin_right = 18
theme_override_constants/margin_bottom = 18

[node name="Layout" type="VBoxContainer" parent="ScrollContainer/MarginContainer"]
layout_mode = 2
size_flags_horizontal = 3
theme_override_constants/separation = 36

[node name="ScalingSection" type="VBoxContainer" parent="ScrollContainer/MarginContainer/Layout"]
layout_mode = 2
theme_override_constants/separation = 18

[node name="Title" type="Label" parent="ScrollContainer/MarginContainer/Layout/ScalingSection"]
layout_mode = 2
theme_override_font_sizes/font_size = 24
text = "Scaling options"
horizontal_alignment = 1
vertical_alignment = 1

[node name="ScaleTargetSetting" parent="ScrollContainer/MarginContainer/Layout/ScalingSection" instance=ExtResource("2_i218e")]
unique_name_in_owner = true
layout_mode = 2
text = "Scale Target"
options = Array[String](["Control", "Window"])

[node name="ScaleTargetExplanation" type="HBoxContainer" parent="ScrollContainer/MarginContainer/Layout/ScalingSection"]
layout_mode = 2

[node name="Filler" type="Control" parent="ScrollContainer/MarginContainer/Layout/ScalingSection/ScaleTargetExplanation"]
layout_mode = 2
size_flags_horizontal = 3

[node name="Label" type="Label" parent="ScrollContainer/MarginContainer/Layout/ScalingSection/ScaleTargetExplanation"]
layout_mode = 2
size_flags_horizontal = 3
size_flags_stretch_ratio = 3.0
theme_type_variation = &"ExplanationLabel"
text = "There are two superficially simple ways to scale UI in Godot. First is scaling the top-level control that houses your UI nodes. This is done via the scale property and has a benefit of being a well-isolate solution, only affecting the node and its descendants. On the flip side, this scaling method also affects the anchors of the control, which limits what anchoring options you can use without extra corrections done in scripts.

The second way is by using Window's content_scale_factor property. This is a great option for applications made in Godot, as it allows you to scale the whole UI from one place and in a way that doesn't break anchors. This comes with some limitations in games, though, as this property affects the entire window, and cannot be adjusted/disabled in sub-viewports or canvas layers. As such, the world camera needs to be adjusted to counteract this scale, if this is relevant.

Either approach needs to be manually repeated for each sub-window."
autowrap_mode = 2

[node name="ScaleFactorSetting" parent="ScrollContainer/MarginContainer/Layout/ScalingSection" instance=ExtResource("2_i218e")]
unique_name_in_owner = true
layout_mode = 2
text = "Scale Factor"
options = Array[String](["50%", "75%", "100%", "125%", "150%", "200%"])

[node name="ScaleFactorExplanation" type="HBoxContainer" parent="ScrollContainer/MarginContainer/Layout/ScalingSection"]
layout_mode = 2

[node name="Filler" type="Control" parent="ScrollContainer/MarginContainer/Layout/ScalingSection/ScaleFactorExplanation"]
layout_mode = 2
size_flags_horizontal = 3

[node name="Label" type="Label" parent="ScrollContainer/MarginContainer/Layout/ScalingSection/ScaleFactorExplanation"]
layout_mode = 2
size_flags_horizontal = 3
size_flags_stretch_ratio = 3.0
theme_type_variation = &"ExplanationLabel"
text = "When working with scale, it's important to account for every scaling level along the way. Different asset options (listed below) may work better at some scales but not others. There typically isn't one solution that fits all cases, and fine tuning, compromise, or smart on-the-fly adjustments are required.

Make sure to compare everything at various scales."
autowrap_mode = 2

[node name="ResetSizeSetting" parent="ScrollContainer/MarginContainer/Layout/ScalingSection" instance=ExtResource("2_i218e")]
unique_name_in_owner = true
layout_mode = 2
text = "Reset Window Size"
options = Array[String](["Off", "On"])

[node name="ResetSizeExplanation" type="HBoxContainer" parent="ScrollContainer/MarginContainer/Layout/ScalingSection"]
layout_mode = 2

[node name="Filler" type="Control" parent="ScrollContainer/MarginContainer/Layout/ScalingSection/ResetSizeExplanation"]
layout_mode = 2
size_flags_horizontal = 3

[node name="Label" type="Label" parent="ScrollContainer/MarginContainer/Layout/ScalingSection/ResetSizeExplanation"]
layout_mode = 2
size_flags_horizontal = 3
size_flags_stretch_ratio = 3.0
theme_type_variation = &"ExplanationLabel"
text = "This option enables a window size reset when other relevant options change. Enabling the reset allows to better understand how the minimum size changes based on the settings. Disabling it allows to visualize anchoring better."
autowrap_mode = 2

[node name="SceneSection" type="VBoxContainer" parent="ScrollContainer/MarginContainer/Layout"]
layout_mode = 2
theme_override_constants/separation = 18

[node name="Title" type="Label" parent="ScrollContainer/MarginContainer/Layout/SceneSection"]
layout_mode = 2
theme_override_font_sizes/font_size = 24
text = "Scene options"
horizontal_alignment = 1
vertical_alignment = 1

[node name="AnchorSetting" parent="ScrollContainer/MarginContainer/Layout/SceneSection" instance=ExtResource("2_i218e")]
unique_name_in_owner = true
layout_mode = 2
text = "Control Anchor"
options = Array[String](["Full Rect", "Top Left", "Center"])

[node name="AnchorExplanation" type="HBoxContainer" parent="ScrollContainer/MarginContainer/Layout/SceneSection"]
layout_mode = 2

[node name="Filler" type="Control" parent="ScrollContainer/MarginContainer/Layout/SceneSection/AnchorExplanation"]
layout_mode = 2
size_flags_horizontal = 3

[node name="Label" type="Label" parent="ScrollContainer/MarginContainer/Layout/SceneSection/AnchorExplanation"]
layout_mode = 2
size_flags_horizontal = 3
size_flags_stretch_ratio = 3.0
theme_type_variation = &"ExplanationLabel"
text = "When designing UI, whether it's menus or an in-game HUD, you want to have freedom to align elements to any place on the screen. Godot's anchoring system as well as a smart use of containers help with that by providing ways to align elements against any corner, side, center, or the entire window/screen.

However, anchoring options don't always behave well with scaling mechanics. In fact, this project has to fix some things in the window size computations to address some of these issues. Other issues may not be possible to address from scripts, though.

See the Window Fixes option below for more details."
autowrap_mode = 2

[node name="BackgroundSetting" parent="ScrollContainer/MarginContainer/Layout/SceneSection" instance=ExtResource("2_i218e")]
unique_name_in_owner = true
layout_mode = 2
text = "Background Environment"
options = Array[String](["Void", "2D", "3D"])

[node name="BackgroundExplanation" type="HBoxContainer" parent="ScrollContainer/MarginContainer/Layout/SceneSection"]
layout_mode = 2

[node name="Filler" type="Control" parent="ScrollContainer/MarginContainer/Layout/SceneSection/BackgroundExplanation"]
layout_mode = 2
size_flags_horizontal = 3

[node name="Label" type="Label" parent="ScrollContainer/MarginContainer/Layout/SceneSection/BackgroundExplanation"]
layout_mode = 2
size_flags_horizontal = 3
size_flags_stretch_ratio = 3.0
theme_type_variation = &"ExplanationLabel"
text = "This option allows to preview approaches against 2D and 3D worlds, which can be informative for gamedev contexts. The Void option is basically a placeholder for the app dev context.

When using Window-based scaling, 2D worlds are also directly affected by the scale factor. This is a major downside of that approach, but it can be worked around by adjusting the camera zoom in the direction opposite to the scale. If you actually need content scale strategies for your 2D game, this Window-based approach may also be not ideal.

3D worlds are affected to a lesser degree. The camera resolution changes with the size of the window when the content scale factor is adjusted. Whether it is desirable or not is up to you and your project's needs. This can also be worked around from a script to fit your needs."
autowrap_mode = 2

[node name="AssetSection" type="VBoxContainer" parent="ScrollContainer/MarginContainer/Layout"]
layout_mode = 2
theme_override_constants/separation = 18

[node name="Title" type="Label" parent="ScrollContainer/MarginContainer/Layout/AssetSection"]
layout_mode = 2
theme_override_font_sizes/font_size = 24
text = "Asset options"
horizontal_alignment = 1
vertical_alignment = 1

[node name="TextureScaleSetting" parent="ScrollContainer/MarginContainer/Layout/AssetSection" instance=ExtResource("2_i218e")]
unique_name_in_owner = true
layout_mode = 2
text = "Texture: Import Scale"
options = Array[String](["1x", "2x", "4x"])

[node name="TextureScaleExplanation" type="HBoxContainer" parent="ScrollContainer/MarginContainer/Layout/AssetSection"]
layout_mode = 2

[node name="Filler" type="Control" parent="ScrollContainer/MarginContainer/Layout/AssetSection/TextureScaleExplanation"]
layout_mode = 2
size_flags_horizontal = 3

[node name="Label" type="Label" parent="ScrollContainer/MarginContainer/Layout/AssetSection/TextureScaleExplanation"]
layout_mode = 2
size_flags_horizontal = 3
size_flags_stretch_ratio = 3.0
theme_type_variation = &"ExplanationLabel"
text = "In this example, we're using SVG textures. This option affects the scale at which they are imported. That is to say that SVG textures are rasterized on import, and then their scale is fixed. E.g. a 32x32 file at the 2x scale will be imported as a 64x64 texture.

You can achieve same results with raster textures, like PNG. You will need to prepare them with the correct scale beforehand, though, using your image editing software of choice."
autowrap_mode = 2

[node name="TextureMipmapsSetting" parent="ScrollContainer/MarginContainer/Layout/AssetSection" instance=ExtResource("2_i218e")]
unique_name_in_owner = true
layout_mode = 2
text = "Texture: Use Mipmaps"
options = Array[String](["Off", "On"])

[node name="TextureMipmapsExplanation" type="HBoxContainer" parent="ScrollContainer/MarginContainer/Layout/AssetSection"]
layout_mode = 2

[node name="Filler" type="Control" parent="ScrollContainer/MarginContainer/Layout/AssetSection/TextureMipmapsExplanation"]
layout_mode = 2
size_flags_horizontal = 3

[node name="Label" type="Label" parent="ScrollContainer/MarginContainer/Layout/AssetSection/TextureMipmapsExplanation"]
layout_mode = 2
size_flags_horizontal = 3
size_flags_stretch_ratio = 3.0
theme_type_variation = &"ExplanationLabel"
text = "Mipmaps can be described as LOD for textures. When you increase the scale above, textures start to look crisp at bigger sizes. However, smaller sizes become jagged. Mipmaps help solve this issue by providing a version of the texture that is better scaled for different usage sizes.

In this example, all textures are always imported with mipmapping enabled, but this is not the default. You must also enable mipmaps in texture filtering options, which is what this option does."
autowrap_mode = 2

[node name="TextureScriptedSetting" parent="ScrollContainer/MarginContainer/Layout/AssetSection" instance=ExtResource("2_i218e")]
unique_name_in_owner = true
layout_mode = 2
text = "Texture: Custom Script"
options = Array[String](["Off", "On"])

[node name="TextureScriptedExplanation" type="HBoxContainer" parent="ScrollContainer/MarginContainer/Layout/AssetSection"]
layout_mode = 2

[node name="Filler" type="Control" parent="ScrollContainer/MarginContainer/Layout/AssetSection/TextureScriptedExplanation"]
layout_mode = 2
size_flags_horizontal = 3

[node name="Label" type="Label" parent="ScrollContainer/MarginContainer/Layout/AssetSection/TextureScriptedExplanation"]
layout_mode = 2
size_flags_horizontal = 3
size_flags_stretch_ratio = 3.0
theme_type_variation = &"ExplanationLabel"
text = "When a texture is used to style a built-in GUI widget, you don't have direct control over how it is going to be rendered. Control nodes do not provide a way to limit the size of most of their icons and textures. This means that when you swap the icon for another imported at a larger scale, it will render at its new native size (e.g. a 32x32 icon scaled two times will render at 64x64), when what you want in practice is downsampling back to 32x32.

Luckily, Godot is highly scriptable and custom subtypes of native resources are possible. With this you can create a custom script extending Texture2D that would rescale the texture to the desired size. You can design it in any way you want, exposing the target size or the scale factor for downsampling. Either way would work, it all depends on your workflow and needs.

Enabling this option swaps standard texture with a scripted one. Unfortunately, this doesn't work with 9-patch textures and textured styleboxes, as 9-patch rendering is not customizable with scripts.

Check the ScaledTexture.gd file for the implementation."
autowrap_mode = 2

[node name="FontScaleSetting" parent="ScrollContainer/MarginContainer/Layout/AssetSection" instance=ExtResource("2_i218e")]
unique_name_in_owner = true
layout_mode = 2
text = "Font: Import Scale"
options = Array[String](["Normal", "OS 2x", "OS 4x", "MSDF 24px", "MSDF 40px"])

[node name="FontScaleExplanation" type="HBoxContainer" parent="ScrollContainer/MarginContainer/Layout/AssetSection"]
layout_mode = 2

[node name="Filler" type="Control" parent="ScrollContainer/MarginContainer/Layout/AssetSection/FontScaleExplanation"]
layout_mode = 2
size_flags_horizontal = 3

[node name="Label" type="Label" parent="ScrollContainer/MarginContainer/Layout/AssetSection/FontScaleExplanation"]
layout_mode = 2
size_flags_horizontal = 3
size_flags_stretch_ratio = 3.0
theme_type_variation = &"ExplanationLabel"
text = "There are two main ways to work with scaling when it comes to fonts. Neither is objectively better and your choice will depend on the specific font and usage context.

- Oversampling. This is the most straightforward option. It boils down to rasterizing the font at a higher resolution and then downsampling it to the required size. No filtering is applied, however, which means that at every size that is not exactly matching the oversampling scale the font becomes jagged.

- Multi-channel signed distance fields, or MSDF for short. This approach uses approximations based on signed distance fields, as the name suggests. This yields better scalable results, but can cause artifacts in glyphs, such as their shape and position on the line.

Note that fonts can sometimes be broken and require expensive processing to be fixed, an option that is not available in Godot and can lead to gaps and shape breaks, specifically caused by self-intersections."
autowrap_mode = 2

[node name="ExtraSection" type="VBoxContainer" parent="ScrollContainer/MarginContainer/Layout"]
layout_mode = 2
theme_override_constants/separation = 18

[node name="Title" type="Label" parent="ScrollContainer/MarginContainer/Layout/ExtraSection"]
layout_mode = 2
theme_override_font_sizes/font_size = 24
text = "Extra options"
horizontal_alignment = 1
vertical_alignment = 1

[node name="WindowFixesSetting" parent="ScrollContainer/MarginContainer/Layout/ExtraSection" instance=ExtResource("2_i218e")]
unique_name_in_owner = true
layout_mode = 2
text = "Window Fixes"
options = Array[String](["Off", "On"])

[node name="WindowFixesExplanation" type="HBoxContainer" parent="ScrollContainer/MarginContainer/Layout/ExtraSection"]
layout_mode = 2

[node name="Filler" type="Control" parent="ScrollContainer/MarginContainer/Layout/ExtraSection/WindowFixesExplanation"]
layout_mode = 2
size_flags_horizontal = 3

[node name="Label" type="Label" parent="ScrollContainer/MarginContainer/Layout/ExtraSection/WindowFixesExplanation"]
layout_mode = 2
size_flags_horizontal = 3
size_flags_stretch_ratio = 3.0
theme_type_variation = &"ExplanationLabel"
text = "By default Window doesn't account for scale changes when calculating its minimum size. In some situations this may be the desirable behavior where excessive content size leads to overflow. However, in apps this is definitely not the expected behavior. To address a few issues with minimum size computations this example includes a custom Window script. For comparison, it can be disabled by this option.

Note: When these fixes are disable a different custom Window script is applied to emulate the default behavior. This is done to address some specificities of this demo project and multiple permutations of options that it tries to demonstrate. The emulated behavior is not perfect, but it's close enough. If you plan to use any of the strategies demonstrated in this example, it's expected that you'd want to apply the fixes regardless.

Check the WindowScript.gd file for an explanation of the issues and the applied workaround."
autowrap_mode = 2

[node name="Window" type="Window" parent="."]
unique_name_in_owner = true
disable_3d = true
gui_embed_subwindows = true
title = "Demo"
position = Vector2i(993, 36)
size = Vector2i(702, 634)
wrap_controls = true
script = ExtResource("3_h5uyj")

[node name="Background" type="Node" parent="Window"]

[node name="EnvironmentVoid" type="Node" parent="Window/Background"]
unique_name_in_owner = true

[node name="Environment2D" parent="Window/Background" instance=ExtResource("4_inthc")]
unique_name_in_owner = true
visible = false

[node name="Environment3D" parent="Window/Background" instance=ExtResource("5_4t02t")]
unique_name_in_owner = true
visible = false

[node name="UILayer" type="CanvasLayer" parent="Window"]

[node name="UIContent" type="MarginContainer" parent="Window/UILayer"]
unique_name_in_owner = true
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
theme_override_constants/margin_left = 16
theme_override_constants/margin_top = 16
theme_override_constants/margin_right = 16
theme_override_constants/margin_bottom = 16

[node name="Layout" type="HBoxContainer" parent="Window/UILayer/UIContent"]
layout_mode = 2
theme_override_constants/separation = 16

[node name="Column1" type="VBoxContainer" parent="Window/UILayer/UIContent/Layout"]
custom_minimum_size = Vector2(320, 0)
layout_mode = 2
size_flags_horizontal = 3
theme_override_constants/separation = 16

[node name="TextScaling" type="VBoxContainer" parent="Window/UILayer/UIContent/Layout/Column1"]
layout_mode = 2
theme_override_constants/separation = 16

[node name="Label" type="Label" parent="Window/UILayer/UIContent/Layout/Column1/TextScaling"]
layout_mode = 2
text = "Text scaling"

[node name="Split" type="ColorRect" parent="Window/UILayer/UIContent/Layout/Column1/TextScaling"]
custom_minimum_size = Vector2(0, 2)
layout_mode = 2

[node name="TextPreview1" type="HBoxContainer" parent="Window/UILayer/UIContent/Layout/Column1/TextScaling"]
layout_mode = 2

[node name="Label" type="Label" parent="Window/UILayer/UIContent/Layout/Column1/TextScaling/TextPreview1"]
layout_mode = 2
size_flags_horizontal = 3
theme_type_variation = &"InfoLabel"
text = "40px"
vertical_alignment = 1

[node name="TextLabel40px" type="Label" parent="Window/UILayer/UIContent/Layout/Column1/TextScaling/TextPreview1"]
unique_name_in_owner = true
layout_mode = 2
size_flags_horizontal = 4
theme_override_font_sizes/font_size = 40
text = "Big label"
horizontal_alignment = 1
vertical_alignment = 1
uppercase = true

[node name="TextPreview2" type="HBoxContainer" parent="Window/UILayer/UIContent/Layout/Column1/TextScaling"]
layout_mode = 2

[node name="Label" type="Label" parent="Window/UILayer/UIContent/Layout/Column1/TextScaling/TextPreview2"]
layout_mode = 2
size_flags_horizontal = 3
theme_type_variation = &"InfoLabel"
text = "24px"
vertical_alignment = 1

[node name="TextLabel24px" type="Label" parent="Window/UILayer/UIContent/Layout/Column1/TextScaling/TextPreview2"]
unique_name_in_owner = true
layout_mode = 2
size_flags_horizontal = 4
theme_override_font_sizes/font_size = 24
text = "Average label"
horizontal_alignment = 1
vertical_alignment = 1

[node name="TextPreview3" type="HBoxContainer" parent="Window/UILayer/UIContent/Layout/Column1/TextScaling"]
layout_mode = 2

[node name="Label" type="Label" parent="Window/UILayer/UIContent/Layout/Column1/TextScaling/TextPreview3"]
layout_mode = 2
size_flags_horizontal = 3
theme_type_variation = &"InfoLabel"
text = "10px"
vertical_alignment = 1

[node name="TextLabel10px" type="Label" parent="Window/UILayer/UIContent/Layout/Column1/TextScaling/TextPreview3"]
unique_name_in_owner = true
layout_mode = 2
size_flags_horizontal = 4
theme_override_font_sizes/font_size = 10
text = "small label"
horizontal_alignment = 1
vertical_alignment = 1

[node name="Split" type="ColorRect" parent="Window/UILayer/UIContent/Layout/Column1"]
custom_minimum_size = Vector2(0, 4)
layout_mode = 2

[node name="TextureScaling" type="VBoxContainer" parent="Window/UILayer/UIContent/Layout/Column1"]
layout_mode = 2
theme_override_constants/separation = 16

[node name="Label" type="Label" parent="Window/UILayer/UIContent/Layout/Column1/TextureScaling"]
layout_mode = 2
text = "Texture scaling (from 64x64 source)"

[node name="Split" type="ColorRect" parent="Window/UILayer/UIContent/Layout/Column1/TextureScaling"]
custom_minimum_size = Vector2(0, 2)
layout_mode = 2

[node name="TexturePreview4" type="HBoxContainer" parent="Window/UILayer/UIContent/Layout/Column1/TextureScaling"]
layout_mode = 2

[node name="Label" type="Label" parent="Window/UILayer/UIContent/Layout/Column1/TextureScaling/TexturePreview4"]
layout_mode = 2
size_flags_horizontal = 3
theme_type_variation = &"InfoLabel"
text = "16x16"
vertical_alignment = 1

[node name="Texture16x16" type="TextureRect" parent="Window/UILayer/UIContent/Layout/Column1/TextureScaling/TexturePreview4"]
unique_name_in_owner = true
texture_filter = 4
custom_minimum_size = Vector2(16, 16)
layout_mode = 2
size_flags_horizontal = 4
texture = ExtResource("5_1th6v")
expand_mode = 1
stretch_mode = 5

[node name="TexturePreview1" type="HBoxContainer" parent="Window/UILayer/UIContent/Layout/Column1/TextureScaling"]
layout_mode = 2

[node name="Label" type="Label" parent="Window/UILayer/UIContent/Layout/Column1/TextureScaling/TexturePreview1"]
layout_mode = 2
size_flags_horizontal = 3
theme_type_variation = &"InfoLabel"
text = "32x32"
vertical_alignment = 1

[node name="Texture32x32" type="TextureRect" parent="Window/UILayer/UIContent/Layout/Column1/TextureScaling/TexturePreview1"]
unique_name_in_owner = true
texture_filter = 4
custom_minimum_size = Vector2(32, 32)
layout_mode = 2
size_flags_horizontal = 4
texture = ExtResource("5_1th6v")
expand_mode = 1
stretch_mode = 5

[node name="TexturePreview2" type="HBoxContainer" parent="Window/UILayer/UIContent/Layout/Column1/TextureScaling"]
layout_mode = 2

[node name="Label" type="Label" parent="Window/UILayer/UIContent/Layout/Column1/TextureScaling/TexturePreview2"]
layout_mode = 2
size_flags_horizontal = 3
theme_type_variation = &"InfoLabel"
text = "64x64"
vertical_alignment = 1

[node name="Texture64x64" type="TextureRect" parent="Window/UILayer/UIContent/Layout/Column1/TextureScaling/TexturePreview2"]
unique_name_in_owner = true
texture_filter = 4
custom_minimum_size = Vector2(64, 64)
layout_mode = 2
size_flags_horizontal = 4
texture = ExtResource("5_1th6v")
expand_mode = 1
stretch_mode = 5

[node name="TexturePreview3" type="HBoxContainer" parent="Window/UILayer/UIContent/Layout/Column1/TextureScaling"]
layout_mode = 2

[node name="Label" type="Label" parent="Window/UILayer/UIContent/Layout/Column1/TextureScaling/TexturePreview3"]
layout_mode = 2
size_flags_horizontal = 3
theme_type_variation = &"InfoLabel"
text = "128x128"
vertical_alignment = 1

[node name="Texture128x128" type="TextureRect" parent="Window/UILayer/UIContent/Layout/Column1/TextureScaling/TexturePreview3"]
unique_name_in_owner = true
texture_filter = 4
custom_minimum_size = Vector2(128, 128)
layout_mode = 2
size_flags_horizontal = 4
texture = ExtResource("5_1th6v")
expand_mode = 1
stretch_mode = 5

[node name="Column2" type="VBoxContainer" parent="Window/UILayer/UIContent/Layout"]
custom_minimum_size = Vector2(320, 0)
layout_mode = 2
size_flags_horizontal = 3

[node name="Styleboxes" type="VBoxContainer" parent="Window/UILayer/UIContent/Layout/Column2"]
layout_mode = 2
theme_override_constants/separation = 16

[node name="Label" type="Label" parent="Window/UILayer/UIContent/Layout/Column2/Styleboxes"]
layout_mode = 2
text = "Stylebox scaling"

[node name="Split" type="ColorRect" parent="Window/UILayer/UIContent/Layout/Column2/Styleboxes"]
custom_minimum_size = Vector2(0, 2)
layout_mode = 2

[node name="StyleboxFlatPreview" type="HBoxContainer" parent="Window/UILayer/UIContent/Layout/Column2/Styleboxes"]
layout_mode = 2

[node name="Label" type="Label" parent="Window/UILayer/UIContent/Layout/Column2/Styleboxes/StyleboxFlatPreview"]
layout_mode = 2
size_flags_horizontal = 3
theme_type_variation = &"InfoLabel"
text = "Flat w/ border"
vertical_alignment = 1

[node name="StyleboxFlatPanel" type="Panel" parent="Window/UILayer/UIContent/Layout/Column2/Styleboxes/StyleboxFlatPreview"]
unique_name_in_owner = true
custom_minimum_size = Vector2(90, 90)
layout_mode = 2
theme_override_styles/panel = SubResource("StyleBoxFlat_4csrp")

[node name="StyleboxTexturePreview" type="HBoxContainer" parent="Window/UILayer/UIContent/Layout/Column2/Styleboxes"]
layout_mode = 2

[node name="Label" type="Label" parent="Window/UILayer/UIContent/Layout/Column2/Styleboxes/StyleboxTexturePreview"]
layout_mode = 2
size_flags_horizontal = 3
theme_type_variation = &"InfoLabel"
text = "Texture / 9-patch"
vertical_alignment = 1

[node name="StyleboxTexturePanel" type="Panel" parent="Window/UILayer/UIContent/Layout/Column2/Styleboxes/StyleboxTexturePreview"]
unique_name_in_owner = true
custom_minimum_size = Vector2(120, 120)
layout_mode = 2
theme_override_styles/panel = SubResource("StyleBoxTexture_mqwt0")

[node name="BuiltinUI" type="VBoxContainer" parent="Window/UILayer/UIContent/Layout/Column2"]
layout_mode = 2
theme_override_constants/separation = 16

[node name="Label" type="Label" parent="Window/UILayer/UIContent/Layout/Column2/BuiltinUI"]
layout_mode = 2
text = "Built-in UI scaling"

[node name="Split" type="ColorRect" parent="Window/UILayer/UIContent/Layout/Column2/BuiltinUI"]
custom_minimum_size = Vector2(0, 2)
layout_mode = 2

[node name="BuiltinPreview1" type="HBoxContainer" parent="Window/UILayer/UIContent/Layout/Column2/BuiltinUI"]
layout_mode = 2

[node name="Label" type="Label" parent="Window/UILayer/UIContent/Layout/Column2/BuiltinUI/BuiltinPreview1"]
layout_mode = 2
size_flags_horizontal = 3
theme_type_variation = &"InfoLabel"
text = "SpinBox"
vertical_alignment = 1

[node name="BuiltinSpinBox" type="SpinBox" parent="Window/UILayer/UIContent/Layout/Column2/BuiltinUI/BuiltinPreview1"]
unique_name_in_owner = true
layout_mode = 2
theme_override_icons/updown = ExtResource("7_bibj3")

[node name="BuiltinPreview2" type="HBoxContainer" parent="Window/UILayer/UIContent/Layout/Column2/BuiltinUI"]
layout_mode = 2

[node name="Label" type="Label" parent="Window/UILayer/UIContent/Layout/Column2/BuiltinUI/BuiltinPreview2"]
layout_mode = 2
size_flags_horizontal = 3
theme_type_variation = &"InfoLabel"
text = "Button"
vertical_alignment = 1

[node name="BuiltinButton" type="Button" parent="Window/UILayer/UIContent/Layout/Column2/BuiltinUI/BuiltinPreview2"]
unique_name_in_owner = true
custom_minimum_size = Vector2(140, 0)
layout_mode = 2
theme_override_constants/h_separation = 8
theme_override_constants/icon_max_width = 24
text = "Press Me"
icon = ExtResource("5_1th6v")

[node name="BuiltinPreview3" type="HBoxContainer" parent="Window/UILayer/UIContent/Layout/Column2/BuiltinUI"]
layout_mode = 2

[node name="Label" type="Label" parent="Window/UILayer/UIContent/Layout/Column2/BuiltinUI/BuiltinPreview3"]
layout_mode = 2
size_flags_horizontal = 3
theme_type_variation = &"InfoLabel"
text = "CheckButton"
vertical_alignment = 1

[node name="BuiltinCheckButton" type="CheckButton" parent="Window/UILayer/UIContent/Layout/Column2/BuiltinUI/BuiltinPreview3"]
unique_name_in_owner = true
custom_minimum_size = Vector2(140, 0)
layout_mode = 2
theme_override_icons/checked = ExtResource("7_mfyq3")
theme_override_icons/unchecked = ExtResource("8_5kf4n")
text = "Toggle Me"
